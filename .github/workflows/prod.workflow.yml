name: FastAPI CI/CD

on:
  # Trigger the workflow on push
  push:
    branches: 
      # Push events on main branch
      - master 

# The Job defines a series of steps that execute on the same runner.
jobs:

  CI:
    # Define the runner used in the workflow
    runs-on: ubuntu-latest
    steps:   
      # Check out repo so our workflow can access it
      - uses: actions/checkout@v2
      
      # Step-1 Setup Python
      - name: Set up Python
        # This action sets up a Python environment for use in actions
        uses: actions/setup-python@v2
        with:
          python-version: 3.11.5
          # optional: architecture: x64 x64 or x86. Defaults to x64 if not specified

      # Step-2 Install Python Virtual ENV
      - name: Install Python Virtual ENV
        run: pip3 install virtualenv

      # Step-3 Setup Virtual ENV
      # https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows
      - name:  Virtual ENV
        uses: actions/cache@v2
        id: cache-venv2 # name for referring later
        with:
          path: venv2 # what we cache: the Virtual ENV
          # The cache key depends on requirements.txt
          key: ${{ runner.os }}-venv2-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv2-

      # Step-4 Build a Virtual ENV, but only if it doesn't already exist
      - name: Activate Virtual ENV
        run: python -m venv venv2 && source venv2/bin/activate && pip3 install -r requirements.txt
        if: steps.cache-venv2.outputs.cache-hit != 'true'

      - name: Run Tests   
        # Note that you have to activate the virtualenv in every step
        # because GitHub actions doesn't preserve the environment   
        run: . venv2/bin/activate && pytest

  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Checkout GitHub Actions
        uses: actions/checkout@main
        
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
          
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: fastapilaisar.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      
      
      - name: Build and push container image to registry 
        run: |
          docker build . -t fastapilaisar.azurecr.io/fastapi-cd:${{ github.sha }}
          docker push fastapilaisar.azurecr.io/fastapi-cd:${{ github.sha }}
          
          
      - name: Deploy to App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'fastapilaisar'
          images: 'fastapilaisar.azurecr.io/fastapi-cd:${{ github.sha }}'
          slot-name: 'production'
          
          
      - name: Azure logout
        run: |
          az logout